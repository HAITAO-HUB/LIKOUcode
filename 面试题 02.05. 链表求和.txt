给定两个用链表表示的整数，每个节点包含一个数位。

这些数位是反向存放的，也就是个位排在链表首部。

编写函数对这两个整数求和，并用链表形式返回结果。

 

示例：

输入：(7 -> 1 -> 6) + (5 -> 9 -> 2)，即617 + 295
输出：2 -> 1 -> 9，即912

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/sum-lists-lcci
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode cur=new ListNode(-1);
        ListNode node=cur;
        int cnt=0;//进位
        if(l1==null){
            return l2;
        }
        else if(l2==null){
            return l1;
        }
        while(l1!=null&&l2!=null){
            int num=l1.val+l2.val+cnt;
            if(num>9){
                cnt=1;
            }
            else{
                cnt=0;
            }
            cur.next=new ListNode(num%10);
            cur=cur.next;
            l1=l1.next;
            l2=l2.next;
        }
       
        while(l1!=null){
            int num=l1.val+cnt;
            if(num>9){
                cnt=1;
            }
            else{
                cnt=0;
            }
            cur.next=new ListNode(num%10);
            cur=cur.next;
            l1=l1.next;
        }
       
        while(l2!=null){
            int num=l2.val+cnt;
            if(num>9){
                cnt=1;
            }
            else{
                cnt=0;
            }
            cur.next=new ListNode(num%10);
            cur=cur.next;
            l2=l2.next;
        }
        if(l1==null&&l2==null&&cnt==1){
            cur.next=new ListNode(1);
            cur=cur.next;
        }
        return node.next;
    }
}