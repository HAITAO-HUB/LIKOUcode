输入一个整型数组，数组里有正数也有负数。数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。

要求时间复杂度为O(n)。


思路：
动态规划，f_0代表以i为结尾的子数组最大和，当以i-1结尾的子数组和为负数时，f_i等于以i为下标的数字
class Solution {
    public int maxSubArray(int[] nums) {
        int f_0=nums[0];//f_0代表以i为结尾的子数组最大和
        int f_i=nums[0];//f_i代表最后要返回的最大值
        for(int i=1;i<nums.length;i++){
            f_0=Math.max(f_0+nums[i],nums[i]);
            if(f_i<f_0){
                f_i=f_0;
            }
        }
        return f_i;
    }
}