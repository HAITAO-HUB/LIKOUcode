给定一个非负整数 num。对于 0 ≤ i ≤ num 范围中的每个数字 i ，计算其二进制数中的 1 的数目并将它们作为数组返回。

示例 1:

输入: 2
输出: [0,1,1]
示例 2:

输入: 5
输出: [0,1,1,2,1,2]

方法一：
class Solution {
    public int[] countBits(int num) {
        int[] arr=new int[num+1];
        for(int i=0;i<=num;i++){
            int n=0;
            for(int j=0;j<32;j++){
                if(((i>>j)&1)==1){
                    n++;
                }
            }
            arr[i]=n;
        }
        return arr;
    }
}

方法二：
class Solution {
    public int[] countBits(int num) {
        int[] arr=new int[num+1];
        arr[0]=0;
    for(int i = 1; i <= num; i++)
        {
            if(i % 2 == 1)
            {
                arr[i] = arr[i-1] + 1;
            }
            else
            {
                arr[i] = arr[i/2];
            }
        }
        
        return arr;
    }
}
