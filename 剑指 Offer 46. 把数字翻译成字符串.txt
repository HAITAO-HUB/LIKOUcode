给定一个数字，我们按照如下规则把它翻译为字符串：0 翻译成 “a” ，1 翻译成 “b”，……，11 翻译成 “l”，……，25 翻译成 “z”。一个数字可能有多个翻译。请编程实现一个函数，用来计算一个数字有多少种不同的翻译方法。

 
示例 1:

输入: 12258
输出: 5
解释: 12258有5种不同的翻译，分别是"bccfi", "bwfi", "bczi", "mcfi"和"mzi"



import java.util.*;

class Solution {
    public int translateNum(int num) {
        if(num<10){
            return 1;
        }
        int dp_0=1;
        int dp_1=1;
        int cnt;
        char[] arr=String.valueOf(num).toCharArray();
        for(int i=1;i<arr.length;i++){
            cnt=(arr[i-1]=='1')||(arr[i-1]=='2')&&arr[i]<'6'?(dp_0+dp_1):dp_1;
            dp_0=dp_1;
            dp_1=cnt; 
        }    
        return dp_1;    
    }
}