从上到下打印出二叉树的每个节点，同一层的节点按照从左到右的顺序打印。


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
import java.util.List;
import java.util.ArrayList;
import java.util.LinkedList;

class Solution {
    public int[] levelOrder(TreeNode root) {
        if(root==null)
            return new int[0];
        Queue<TreeNode> que=new LinkedList<>();
        List<Integer> arr=new ArrayList<>();
        que.offer(root);
        while(!que.isEmpty()){
            TreeNode node=que.poll();
            arr.add(node.val);
            if(node.left!=null){
                que.offer(node.left);
            }
            if(node.right!=null){
                que.offer(node.right);
            }
        }
        int[] s=new int[arr.size()];
        for(int i=0;i<s.length;i++){
            s[i]=arr.get(i);
        }
        return s;
    }
}