给定一个单链表，把所有的奇数节点和偶数节点分别排在一起。请注意，这里的奇数节点和偶数节点指的是节点编号的奇偶性，而不是节点的值的奇偶性。

请尝试使用原地算法完成。你的算法的空间复杂度应为 O(1)，时间复杂度应为 O(nodes)，nodes 为节点总数。

示例 1：
输入: 1->2->3->4->5->NULL
输出: 1->3->5->2->4->NULL

示例 2:
输入: 2->1->3->5->6->4->7->NULL 
输出: 2->3->6->7->1->5->4->NULL



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode oddEvenList(ListNode head) {
        if(head==null){
            return null;
        }
        ListNode node1 =new ListNode(-1);
        ListNode node2=new ListNode(-1);
        ListNode tmp1=node1;
        ListNode tmp2=node2;
        ListNode cur=head;
        int count=0;
        while(cur!=null){
            if(count%2==0){
                tmp1.next=cur;
                tmp1=tmp1.next;
            }else{
                tmp2.next=cur;
                tmp2=tmp2.next;
            }
            count++;
            cur=cur.next;
        }
        tmp1.next=node2.next;
        tmp2.next=null;
        return node1.next;
    }
}