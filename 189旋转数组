给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。

示例 1:

输入: [1,2,3,4,5,6,7] 和 k = 3
输出: [5,6,7,1,2,3,4]
解释:
向右旋转 1 步: [7,1,2,3,4,5,6]
向右旋转 2 步: [6,7,1,2,3,4,5]
向右旋转 3 步: [5,6,7,1,2,3,4]


void rotate(int* nums, int numsSize, int k){//三次反转
    int i=0;
    int j=0;
    k%=numsSize;
  for(i=0,j=numsSize-1;i<j;i++,j--)//反转整个数组
    {
      nums[i]=nums[j]^nums[i];
      nums[j]=nums[j]^nums[i];
      nums[i]=nums[j]^nums[i];
  }
    for(i=0,j=k-1;i<j;i++,j--)//反转前半部分
    {
      nums[i]=nums[j]^nums[i];
      nums[j]=nums[j]^nums[i];
      nums[i]=nums[j]^nums[i];
    }
        for(i=k,j=numsSize-1;i<j;i++,j--)//反转后半部分
        {
         nums[i]=nums[j]^nums[i];
         nums[j]=nums[j]^nums[i];
         nums[i]=nums[j]^nums[i];
        }
}