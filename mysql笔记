第一节
为什么需要数据库？
1、便于查询（检索）
2、便于管理、控制
3、进行安全控制（权限控制）
数据库：
1、关系型数据库（RDBMS）
采用关系模型管理数据的数据库。关系模型就是二维表格模型
由表（table）组成，表（Attribute）是有属性（列Column、字段field）
2、非关系型数据库

###数据库安装与配置
1、mysql -u root -p     没有分号
2、show databases;
3、对比mysql_home data 目录，数据保存在磁盘目录
4、mysql连接mysqld,mysql是客户端，mysqld是服务端
###sql
结构化查询语言，用于和数据库交互
###数据库操作
1、创建一个数据库，会在data目录下生成一个新的目录
2、创建一个表，会在数据库**data/数据库目录**下面生成两个文件名称

第二节
###数据库的操作
创建数据库：create database if not exists db_name;
使用数据库：use db_name;
删除数据库：drop database if exists db_name;
显示数据库：show databases;
查看当前位置：select database();

###数据库表的操作
创建表：
create table db_name
(    
        fielname  type,
        fielname1 type
);
查看表结构：
desc tabe_name;  describe table_name;
删除表：
drop table if exists table_name;
##数据库表的增删改查（CRUD）
新增：
insert into table_name values(1,20170010,'Toni','Toni@qq.com');
部分列插入：
insert into table_name (id,sn) values(3,2018391);
查询：
全列查询：select * from tabe_name;
指定列查询：select Column_name form table_name;
select id+2000 from table_name;
别名：    
    
排序：
asc   升序
desc 降序
默认是asc ,升序
select * from score order by math asc;
模糊查询：
select * from student where name like 'T%';查询名字以T开头的人信息
修改：
update score set English=60;把英语成绩全部修改为60

总结：
插入：
insert into tabe_name(col1,col2)  values(v1,v2)；
删除表内容：
delete from 表 where 条件
condition:算数比较，逻辑，between,and,in,like

第三节
YYYY-MM-DD  HH:MM:SS
datetime 范围：1000~9999
timestamp 范围：1970~2038-》UTC
数据库约束
约束：保证数据记录符合现实世界的意义
数据完整性：
1、实体完整性  -》主键 primary key  不能为NULL,不能为空
2、参照完整性  -》外键 foreign  key
3、用户自定义完整性   -》 not null,unique,default,check
数据库设计
设计学生选课系统
1、学生新学期开始可以选课，选择某个老师的课
2、学生要有所在班级的信息
找出实体之间的关系：
老师-》课程  M:N
学生-》课程  M:N
学生-》班级  M:1

1:1
1:M
M:N

ER图
矩形：实体
菱形：关系
椭圆：属性
1、画出实体
2、建立关系
3、标出属性
4、标出主键

概念模型转换为关系模型
1.之间将er图内容转化为建表语句


JDBC的特点（优势）：
1.屏蔽不同数据库的差异（向下）
2.提供统一抽象的接口，用户关心数据库的具体实现（向上）
3.封装了很多细节，程序员不需要关心
DataSource特点
1.在javax.sql中定义了接口，由各数据库厂商实现
2.PreparedStatment语句提供cache
3.提供数据库连接池能力
4.能支持不同厂商数据库的切换
连接池的作用：
1.连接可以重复利用，提高连接资源利用率
2.提高数据库访问效率
