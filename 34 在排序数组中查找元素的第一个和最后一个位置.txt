给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。

你的算法时间复杂度必须是 O(log n) 级别。

如果数组中不存在目标值，返回 [-1, -1]。

class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] arr=new int[2];
        int a=leftIndex(nums,target);
        int b=rightIndex(nums,target);  
        arr[0]=a;
        arr[1]=b;
        return arr;
    }
    public  int leftIndex(int[] nums,int target){
        int left=0;
        int right=nums.length-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]<target){
                left=mid+1;
            }
            else if(nums[mid]>=target){
                right=mid-1;
            }
        }
        if(left>=nums.length||nums[left]!=target)
            return -1;
       return left;
    }
    public  int rightIndex(int[] nums,int target){
        int left=0;
        int right=nums.length-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]<=target){
                left=mid+1;
            }
            else if(nums[mid]>target){
                right=mid-1;
            }
        }
        if(right<0||nums[right]!=target)
            return -1;
       return right;  
  }
}