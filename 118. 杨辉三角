给定一个非负整数 numRows，生成杨辉三角的前 numRows 行



class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ret=new ArrayList<>();
        for(int i=0;i<numRows;i++){
            List<Integer> Row=new ArrayList<>();
            for(int j=0;j<=i;j++){
                if(j==0||i==j){
                    Row.add(1);
                }else{
                    Row.add(0);
                }
            }
            ret.add(Row);
        }
        for(int i=2;i<numRows;i++){
            List<Integer> cur=ret.get(i);
            List<Integer> pre=ret.get(i-1);
            for(int j=1;j<i;j++){
                cur.set(j,pre.get(j)+pre.get(j-1));
            }
        }
        return ret;
    }
}


2020.09.17
class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> List=new ArrayList<>();
        if(numRows==0){
            return List;
        }
        List<Integer> s=new ArrayList<>();
        s.add(1);;
        List.add(s);
        for(int i=1;i<numRows;i++){
            List<Integer> a=new ArrayList<>();
            List<Integer> b=List.get(i-1);
            a.add(1);
            for(int j=1;j<i;j++){
                a.add(b.get(j-1)+b.get(j));
            }
            a.add(1);
            List.add(a);
        }
        return List;
    }
}