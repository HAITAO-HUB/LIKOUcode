给你一个数组 events，其中 events[i] = [startDayi, endDayi] ，表示会议 i 开始于 startDayi ，结束于 endDayi 。

你可以在满足 startDayi <= d <= endDayi 中的任意一天 d 参加会议 i 。注意，一天只能参加一个会议。

请你返回你可以参加的 最大 会议数目。

 
输入：events = [[1,2],[2,3],[3,4]]
输出：3
解释：你可以参加所有的三个会议。
安排会议的一种方案如上图。
第 1 天参加第一个会议。
第 2 天参加第二个会议。
第 3 天参加第三个会议。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/maximum-number-of-events-that-can-be-attended
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    public int maxEvents(int[][] events) {

        Arrays.sort(events,new Comparator<int[]>(){
            public int compare(int[] o1,int[] o2){
                return o1[0]-o2[0];
            }
        });
        //小顶堆
        PriorityQueue<Integer> pq = new PriorityQueue<>();

        int res = 0, last = 1, i = 0, n = events.length;
        while (i < n || !pq.isEmpty()) {

            while (i < n && events[i][0] == last) {
                pq.offer(events[i++][1]);
            }
            while (!pq.isEmpty() && pq.peek() < last) {
                pq.poll();
            }
            if (!pq.isEmpty()) {
                pq.poll();
                res++;
            }
            last++;
        }
        return res;
    }

}