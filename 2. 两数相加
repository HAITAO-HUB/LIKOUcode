给出两个 非空 的链表用来表示两个非负的整数。
其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。
如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。
您可以假设除了数字 0 之外，这两个数都不会以 0 开头。
示例：

输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)
输出：7 -> 0 -> 8
原因：342 + 465 = 807

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode a=l1;
        ListNode b=l2;
        int p=0;//进位
        ListNode node=new ListNode(-1);
        ListNode cur=node;
        while(a!=null||b!=null){
            int x=(a==null)?0:a.val;
            int y=(b==null)?0:b.val;
            int sum=x+y+p;
             p=sum/10;
            ListNode sumNode=new ListNode(sum%10);
            cur.next=sumNode;
            cur=cur.next;
            if(a!=null)
            a=a.next;
            if(b!=null)
            b=b.next;
        }
        if(p!=0)
        cur.next= new ListNode(p);
        return node.next;
    }
}