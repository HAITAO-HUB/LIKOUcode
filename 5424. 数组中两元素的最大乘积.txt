给你一个整数数组 nums，请你选择数组的两个不同下标 i 和 j，使 (nums[i]-1)*(nums[j]-1) 取得最大值。

请你计算并返回该式的最大值。


示例 1：

输入：nums = [3,4,5,2]
输出：12 
解释：如果选择下标 i=1 和 j=2（下标从 0 开始），则可以获得最大值，(nums[1]-1)*(nums[2]-1) = (4-1)*(5-1) = 3*4 = 12 。 



class Solution {
    public int maxProduct(int[] nums) {
        if(nums.length<2){
            return -1;
        }
        int mid=0,max=1;
        if(nums[mid]>nums[max]){
            int a=mid;
            mid=max;
            max=a;
        }
        for(int i=2;i<nums.length;i++){
            if(nums[i]>nums[mid]&&nums[i]<=nums[max]){
                mid=i;
            }
            else if(nums[i]>nums[max]){
                mid=max;
                max=i;
            }
        }
        return (nums[mid]-1)*(nums[max]-1);
    }
}